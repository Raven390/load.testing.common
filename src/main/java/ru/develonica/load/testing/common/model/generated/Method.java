// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LoadTestingStart.proto

package ru.develonica.load.testing.common.model.generated;

/**
 * Protobuf enum {@code ru.develonica.load.testing.common.model.generated.Method}
 */
public enum Method
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>GET = 0;</code>
   */
  GET(0),
  /**
   * <code>HEAD = 1;</code>
   */
  HEAD(1),
  /**
   * <code>POST = 2;</code>
   */
  POST(2),
  /**
   * <code>PUT = 3;</code>
   */
  PUT(3),
  /**
   * <code>PATCH = 4;</code>
   */
  PATCH(4),
  /**
   * <code>DELETE = 5;</code>
   */
  DELETE(5),
  /**
   * <code>OPTIONS = 6;</code>
   */
  OPTIONS(6),
  /**
   * <code>TRACE = 7;</code>
   */
  TRACE(7),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>GET = 0;</code>
   */
  public static final int GET_VALUE = 0;
  /**
   * <code>HEAD = 1;</code>
   */
  public static final int HEAD_VALUE = 1;
  /**
   * <code>POST = 2;</code>
   */
  public static final int POST_VALUE = 2;
  /**
   * <code>PUT = 3;</code>
   */
  public static final int PUT_VALUE = 3;
  /**
   * <code>PATCH = 4;</code>
   */
  public static final int PATCH_VALUE = 4;
  /**
   * <code>DELETE = 5;</code>
   */
  public static final int DELETE_VALUE = 5;
  /**
   * <code>OPTIONS = 6;</code>
   */
  public static final int OPTIONS_VALUE = 6;
  /**
   * <code>TRACE = 7;</code>
   */
  public static final int TRACE_VALUE = 7;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Method valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static Method forNumber(int value) {
    switch (value) {
      case 0: return GET;
      case 1: return HEAD;
      case 2: return POST;
      case 3: return PUT;
      case 4: return PATCH;
      case 5: return DELETE;
      case 6: return OPTIONS;
      case 7: return TRACE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Method>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Method> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Method>() {
          public Method findValueByNumber(int number) {
            return Method.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return ru.develonica.load.testing.common.model.generated.LoadTestingStart.getDescriptor().getEnumTypes().get(0);
  }

  private static final Method[] VALUES = values();

  public static Method valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Method(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:ru.develonica.load.testing.common.model.generated.Method)
}

